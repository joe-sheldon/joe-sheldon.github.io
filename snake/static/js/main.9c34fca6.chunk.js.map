{"version":3,"sources":["controls/VariablePaper.js","controls/ErrorPaper.js","currentValues/CurrentValuesScreen.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","paper","height","width","backgroundColor","color","paperContent","alignItems","justifyContent","marginTop","marginBottom","marginLeft","marginRight","flex","left","right","top","bottom","VariablePaper","props","styles","Grid","item","Paper","className","valueName","valueUnits","value","toFixed","key","ErrorPaper","header","msg","root","margin","controls","CurrentValuesScreen","React","useState","sensorOnline","setSensorOnline","fetchRate","setFetchRate","temperature","setTemperature","humidity","setHumidity","pressure","setPressure","useInterval","axios","get","then","res","status","nt","data","nh","np","console","log","catch","statusText","tempF","container","spacing","xs","justify","printClimateVariables","Typography","Slider","defaultValue","step","min","max","onChange","evt","val","position","appBar","content","display","bottomNavBar","App","AppBar","Toolbar","variant","IconButton","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c34fca6.chunk.js","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    paper: {\n        height: 160,\n        width: 320,\n        backgroundColor: '#444444',\n        color: 'white',\n    },\n    paperContent: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '1rem',\n        marginBottom: '1rem',\n        marginLeft: '1rem',\n        marginRight: '1rem',\n\n        flex: 1,\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n    }\n});\n\nexport default function VariablePaper(props) {\n    const styles = useStyles()\n\n    return (\n        <Grid key={props.key} item>\n            <Paper className={styles.paper}>\n                <div className={styles.paperContent}>\n                    <h2>{props.valueName} ({props.valueUnits})</h2>\n                    <h1>{props.value.toFixed(1)}</h1>\n                </div>\n            </Paper>\n        </Grid>\n    );\n}","import Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    paper: {\n        height: 160,\n        width: 320,\n        backgroundColor: '#882222',\n        color: 'white',\n    },\n    paperContent: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '1rem',\n        marginBottom: '1rem',\n        marginLeft: '1rem',\n        marginRight: '1rem',\n\n        flex: 1,\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n    }\n});\n\nexport default function ErrorPaper(props) {\n    const styles = useStyles()\n\n    return (\n        <Grid key={props.key} item>\n            <Paper className={styles.paper}>\n                <div className={styles.paperContent}>\n                    <h2>{props.header}</h2>\n                    {props.msg}\n                </div>\n            </Paper>\n        </Grid>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport useInterval from \"@use-it/interval\";\nimport axios from \"axios\";\nimport {Typography} from \"@material-ui/core\";\nimport VariablePaper from \"../controls/VariablePaper\";\nimport ErrorPaper from \"../controls/ErrorPaper\";\n\n\nconst useStyles = makeStyles({\n    root: {\n        margin: 1,\n    },\n    controls: {\n        width: 300,\n    },\n});\nexport default function CurrentValuesScreen(props) {\n    const styles = useStyles()\n\n    const [sensorOnline, setSensorOnline] = React.useState(false)\n    const [fetchRate, setFetchRate] = React.useState(1.0)\n    const [temperature, setTemperature] = React.useState(0);\n    const [humidity, setHumidity] = React.useState(0);\n    const [pressure, setPressure] = React.useState(0);\n\n    useInterval(() => {\n        fetch()\n    },fetchRate * 1000);\n\n    function fetch() {\n        axios.get('http://localhost:5000/api/current').then(res => {\n\n            if(res.status == 200) {\n                const nt = res.data.temperature;\n                const nh = res.data.humidity;\n                const np = res.data.pressure;\n\n                setTemperature(nt);\n                setHumidity(nh);\n                setPressure(np);\n\n                console.log(\"fetch success: \" + nt + \"C/ \" + nh + \"% / \" + np + \"hPa\");\n                setSensorOnline(true)\n            }\n\n        }).catch(res => {\n            console.log(\"fetch failure: \" + res.status + \" / \" + res.statusText)\n            setSensorOnline(false);\n        });\n    }\n\n    function printClimateVariables() {\n        const tempF = (temperature * 9.0/5.0) + 32.0\n\n        return(\n            <div>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Grid container justify=\"center\" spacing={1}>\n                            <VariablePaper key={1} valueName={\"Temperature\"} valueUnits={\"F\"} value={tempF}/>\n                            <VariablePaper key={2} valueName={\"Humidity\"} valueUnits={\"%\"} value={humidity}/>\n                            <VariablePaper key={3} valueName={\"Pressure\"} valueUnits={\"hPa\"} value={pressure}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n    function printError() {\n        return(\n            <div>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Grid container justify=\"center\" spacing={1}>\n                            <ErrorPaper key={1} header={\"Connection Failure\"} msg={\"Check Backend Server or network connection\"} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n    return (\n        <div className={styles.root}>\n            <div>\n                {sensorOnline ? (printClimateVariables()) : (printError())}\n            </div>\n            <div className={styles.controls}>\n                <Typography>Update Interval: {fetchRate} second(s)</Typography>\n                <Slider defaultValue={1.0} step={0.25} min={0.25} max={4.0} onChange={(evt,val) => setFetchRate(val)} />\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport CurrentValuesScreen from \"./currentValues/CurrentValuesScreen\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {AppBar, BottomNavigation, BottomNavigationAction, IconButton, Toolbar, Typography} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles({\n    root: {\n        flex: 1,\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: '#222222',\n        color: 'white',\n    },\n    appBar: {\n        flex: 1,\n        position: \"sticky\",\n        left: 0,\n        right: 0,\n        top: 0,\n    },\n    content: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: '1rem',\n        marginRight: '1rem',\n        backgroundColor: '#222222',\n        color: 'white',\n    },\n    bottomNavBar: {\n        flex: 1,\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        bottom: 0,\n    }\n});\nfunction App() {\n    const styles = useStyles();\n    const baseTitle = \"Snake Habitat Information Center\";\n    const snake_logo = \"./snake.png\"\n\n    return (\n        <div className={styles.root}>\n            <AppBar className={styles.appBar}>\n                <Toolbar variant=\"dense\">\n                    <IconButton>\n                        <img src=\"./snake.png\" height=\"32rem\"/>\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Snake Habitat: Current Values\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <div className={styles.content}>\n                <CurrentValuesScreen />\n            </div>\n        </div>\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}